{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapActions, mapGetters } from 'vuex';\nimport BookView from './BookView.vue';\nexport default {\n  name: 'BooksView',\n  components: {\n    BookView\n  },\n  props: {\n    bookIds: {\n      type: Array,\n      required: true\n    }\n  },\n  computed: {\n    ...mapGetters(['books'])\n  },\n  methods: {\n    ...mapActions(['fetchBooks', 'deleteBook']),\n    handleDeleteBook(id) {\n      this.deleteBook(id);\n    }\n  },\n  mounted() {\n    this.fetchBooks();\n  },\n  data() {\n    return {\n      fetchedBooks: []\n    };\n  },\n  watch: {\n    bookIds: {\n      immediate: true,\n      handler(newBookIds) {\n        this.fetchedBooks = [];\n        newBookIds.forEach(id => {\n          fetch('http://localhost:8110/admin/book/' + id).then(res => res.json()).then(data => {\n            this.fetchedBooks.push(data);\n          }).catch(error => {\n            console.error('Fetch error:', error);\n          });\n        });\n      }\n    },\n    mounted() {\n      console.log('bookIds in BooksView:', this.bookIds);\n      if (Array.isArray(this.bookIds)) {\n        this.bookIds.forEach(id => {\n          fetch(`http://localhost:8110/admin/book/${id}`).then(res => res.json()).then(data => {\n            this.books.push(data);\n          }).catch(error => console.error('Fetch error:', error));\n        });\n      } else {\n        console.error('bookIds is not an array:', this.bookIds);\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapActions","mapGetters","BookView","name","components","props","bookIds","type","Array","required","computed","methods","handleDeleteBook","id","deleteBook","mounted","fetchBooks","data","fetchedBooks","watch","immediate","handler","newBookIds","forEach","fetch","then","res","json","push","catch","error","console","log","isArray","books"],"sources":["src/components/Book/BooksView.vue"],"sourcesContent":["<template>\n    <div id=\"booksContainer\">\n        <BookView v-for=\"book in books\" :key=\"book.id\" :book=\"book\"/>\n    </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\nimport BookView from './BookView.vue';\nexport default {\n    name: 'BooksView',\n    components: {\n        BookView\n    },\n    props: {\n        bookIds: {\n            type: Array,\n            required: true\n        }\n    },\n    computed: {\n        ...mapGetters(['books'])\n    },\n    methods: {\n        ...mapActions(['fetchBooks', 'deleteBook']),\n        handleDeleteBook(id) {\n            this.deleteBook(id);\n        }\n    },\n    mounted() {\n        this.fetchBooks();\n    },\n    data() {\n        return {\n            fetchedBooks: []\n        }\n    },\n    watch: {\n    bookIds: {\n      immediate: true,\n      handler(newBookIds) {\n        this.fetchedBooks = [];\n        newBookIds.forEach(id => {\n          fetch('http://localhost:8110/admin/book/' + id)\n            .then(res => res.json())\n            .then(data => {\n              this.fetchedBooks.push(data);\n            })\n            .catch(error => {\n              console.error('Fetch error:', error);\n            });\n        });\n      }\n    },\n    mounted() {\n        console.log('bookIds in BooksView:', this.bookIds);\n\n        if (Array.isArray(this.bookIds)) {\n        this.bookIds.forEach(id => {\n            fetch(`http://localhost:8110/admin/book/${id}`)\n            .then(res => res.json())\n            .then(data => {\n                this.books.push(data);\n            })\n            .catch(error => console.error('Fetch error:', error));\n        });\n        } else {\n        console.error('bookIds is not an array:', this.bookIds);\n        }\n      \n    }\n    }}\n</script>\n\n<style scoped>\n#booksContainer {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    gap: 20px;\n    padding: 20px;\n}\n</style>"],"mappings":";AAOA,SAAAA,UAAA,EAAAC,UAAA;AACA,OAAAC,QAAA;AACA;EACAC,IAAA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACAC,OAAA;MACAC,IAAA,EAAAC,KAAA;MACAC,QAAA;IACA;EACA;EACAC,QAAA;IACA,GAAAT,UAAA;EACA;EACAU,OAAA;IACA,GAAAX,UAAA;IACAY,iBAAAC,EAAA;MACA,KAAAC,UAAA,CAAAD,EAAA;IACA;EACA;EACAE,QAAA;IACA,KAAAC,UAAA;EACA;EACAC,KAAA;IACA;MACAC,YAAA;IACA;EACA;EACAC,KAAA;IACAb,OAAA;MACAc,SAAA;MACAC,QAAAC,UAAA;QACA,KAAAJ,YAAA;QACAI,UAAA,CAAAC,OAAA,CAAAV,EAAA;UACAW,KAAA,uCAAAX,EAAA,EACAY,IAAA,CAAAC,GAAA,IAAAA,GAAA,CAAAC,IAAA,IACAF,IAAA,CAAAR,IAAA;YACA,KAAAC,YAAA,CAAAU,IAAA,CAAAX,IAAA;UACA,GACAY,KAAA,CAAAC,KAAA;YACAC,OAAA,CAAAD,KAAA,iBAAAA,KAAA;UACA;QACA;MACA;IACA;IACAf,QAAA;MACAgB,OAAA,CAAAC,GAAA,+BAAA1B,OAAA;MAEA,IAAAE,KAAA,CAAAyB,OAAA,MAAA3B,OAAA;QACA,KAAAA,OAAA,CAAAiB,OAAA,CAAAV,EAAA;UACAW,KAAA,qCAAAX,EAAA,IACAY,IAAA,CAAAC,GAAA,IAAAA,GAAA,CAAAC,IAAA,IACAF,IAAA,CAAAR,IAAA;YACA,KAAAiB,KAAA,CAAAN,IAAA,CAAAX,IAAA;UACA,GACAY,KAAA,CAAAC,KAAA,IAAAC,OAAA,CAAAD,KAAA,iBAAAA,KAAA;QACA;MACA;QACAC,OAAA,CAAAD,KAAA,kCAAAxB,OAAA;MACA;IAEA;EACA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}