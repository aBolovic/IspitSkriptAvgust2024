{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  props: {\n    to: {\n      type: String,\n      required: true\n    },\n    buttonClass: {\n      type: String,\n      default: ''\n    }\n  },\n  methods: {\n    navigate() {\n      if (this.$route.path !== this.to) {\n        this.$router.push(this.to).catch(err => {\n          if (err.name !== 'NavigationDuplicated') {\n            console.error('Navigation error:', err);\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["props","to","type","String","required","buttonClass","default","methods","navigate","$route","path","$router","push","catch","err","name","console","error"],"sources":["src/components/RouterButton.vue"],"sourcesContent":["<template>\n    <button @click=\"navigate\" :class=\"buttonClass\">\n      <slot></slot> \n    </button>\n  </template>\n  \n  <script>\n  export default {\n    props: {\n      to: {\n        type: String,\n        required: true\n      },\n      buttonClass: {\n        type: String,\n        default: ''\n      }\n    },\n    methods: {\n      navigate() {\n      if (this.$route.path !== this.to) {\n        this.$router.push(this.to).catch(err => {\n          if (err.name !== 'NavigationDuplicated') {\n            console.error('Navigation error:', err);\n          }\n        });\n      }\n    }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  button {\n    font-size: 16px;\n    width: 100px;\n    height: 25px;\n    font-family: 'Times New Roman', Times, serif;\n    text-align: center;\n    display: inline-block;\n    background-color: #000000;\n    color: white;\n    border-radius: 5px;\n    cursor: pointer;\n    border: none;\n  }\n  \n  </style>\n  "],"mappings":";AAOA;EACAA,KAAA;IACAC,EAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;IACAC,WAAA;MACAH,IAAA,EAAAC,MAAA;MACAG,OAAA;IACA;EACA;EACAC,OAAA;IACAC,SAAA;MACA,SAAAC,MAAA,CAAAC,IAAA,UAAAT,EAAA;QACA,KAAAU,OAAA,CAAAC,IAAA,MAAAX,EAAA,EAAAY,KAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA;YACAC,OAAA,CAAAC,KAAA,sBAAAH,GAAA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}